name: Test Suite

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:

  linux:
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'refactor/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runner_args: [dart test -j1 -t cli test/*, melos test-unit-scoped, dart tool/generated_test_runner.dart]
    env:
      TEST_DIR: packages/conduit
    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: conduit_test_user
          POSTGRES_PASSWORD: conduit!
          POSTGRES_DB: conduit_test_db
          POSTGRES_PORT: 15432
        ports:
          - 15432:5432
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: dev
      - name: Get Dependencies
        run: |
          dart pub global activate melos
          melos bootstrap
          melos cache-source
          dart pub get --directory=packages/isolate_exec_test_packages/test_package --offline
          dart pub get --directory=packages/runtime_test_packages/application --offline
          dart pub get --directory=packages/runtime_test_packages/dependency --offline
      - name: Run tests
        working-directory: ${{ env.TEST_DIR }}
        run: . ../../ci/.env && ${{ matrix.runner_args }}

  macos:
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'refactor/')
    runs-on: macos-latest
    strategy:
      matrix:
        runner_args: [dart test -j1 -t cli test/*, melos test-unit-scoped, dart tool/generated_test_runner.dart]
    env:
      TEST_DIR: packages/conduit
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 15432
      PGPORT: 15432
      POSTGRES_ADMIN_USER: conduit_test_user
      POSTGRES_ADMIN_PASSWORD: conduit!
      POSTGRES_USER: conduit_test_user
      POSTGRES_PASSWORD: conduit!
      POSTGRES_DB: conduit_test_db
      TEST_DB_ENV_VAR: postgres://user:password@host:15432/dbname
      TEST_VALUE: 1
      TEST_BOOL: true
    steps:
    - name: Start PostgreSQL
      run: |
        mkdir -p datadir
        initdb -U postgres -D datadir
        pg_ctl -o "-p ${{env.POSTGRES_PORT}}" -D datadir start
    - name: Create database
      run: |
        createuser -s -e -g postgres ${{ env.POSTGRES_USER }}
        psql --command="ALTER USER ${{ env.POSTGRES_USER }} WITH PASSWORD '${{ env.POSTGRES_PASSWORD }}'"
        createdb --owner=${{ env.POSTGRES_USER }} ${{ env.POSTGRES_DB }}
    - uses: actions/checkout@v3
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: dev
    - name: Get Dependencies
      run: |
        dart pub global activate melos
        melos bootstrap
        melos cache-source
        dart pub get --directory=packages/isolate_exec_test_packages/test_package --offline
        dart pub get --directory=packages/runtime_test_packages/application --offline
        dart pub get --directory=packages/runtime_test_packages/dependency --offline
    - name: Run tests
      working-directory: ${{ env.TEST_DIR }}
      run: . ../../ci/.env && ${{ matrix.runner_args }}

  windows:
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'refactor/')
    runs-on: windows-latest
    strategy:
      matrix:
        runner_args: [dart test -j1 -t cli test/, melos test-unit, dart tool/generated_test_runner.dart]
    env:
      TEST_DIR: packages/conduit
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 15432
      PGPORT: 15432
      POSTGRES_ADMIN_USER: conduit_test_user
      POSTGRES_ADMIN_PASSWORD: conduit!
      POSTGRES_USER: conduit_test_user
      POSTGRES_PASSWORD: conduit!
      POSTGRES_DB: conduit_test_db
      TEST_DB_ENV_VAR: postgres://user:password@host:15432/dbname
      TEST_VALUE: 1
      TEST_BOOL: true
    steps:
    - name: Start PostgreSQL
      run: |
        mkdir datadir
        icacls "datadir" /grant Users:F /T
        & $env:PGBIN\initdb -U postgres -D datadir
        & $env:PGBIN\pg_ctl -o "-p ${{env.POSTGRES_PORT}}" -D datadir start
    - name: Create database
      run: |
        & $env:PGBIN\createuser -s -e -g postgres ${{ env.POSTGRES_USER }}
        & $env:PGBIN\psql --command="ALTER USER ${{ env.POSTGRES_USER }} WITH PASSWORD '${{ env.POSTGRES_PASSWORD }}'"
        & $env:PGBIN\createdb --owner=${{ env.POSTGRES_USER }} ${{ env.POSTGRES_DB }}
    - uses: actions/checkout@v3
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: dev
    - name: Get Dependencies
      run: |
        choco install yq
        dart pub global activate melos
        dart pub global run melos:melos bootstrap
        dart pub global run melos:melos cache-source-win
        dart pub get --directory=packages/isolate_exec_test_packages/test_package --offline
        dart pub get --directory=packages/runtime_test_packages/application --offline
        dart pub get --directory=packages/runtime_test_packages/dependency --offline
    - name: Run tests
      working-directory: ${{ env.TEST_DIR }}
      run: ${{ matrix.runner_args }}